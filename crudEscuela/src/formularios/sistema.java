/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import conexionSQL.conexionSQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jhonathan
 */
public class sistema extends javax.swing.JFrame {

    //Instanciar objeto conexion
    conexionSQL cc = new conexionSQL();
    Connection con = cc.conexion();
    
    
    
    public sistema() {
        initComponents();
        
        //Hacer que aparezca en el centro de la pantalla 
        this.setLocationRelativeTo(null);
        
        //Mandar fondo al JFrame
        this.getContentPane().setBackground(getBackground());
        
        //Iniciar metodo de mostrar datos cada que la aplicaci칩n se inicie
        mostrarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbMateria = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtCalificacion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbEstatus = new javax.swing.JComboBox<>();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActuazlizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlumnos = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(168, 0, 44));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("Nombre");

        txtNombre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel2.setText("Apellidos");

        jLabel3.setText("Materia");

        cbMateria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matematicas", "Espa침ol", "Ingles", "Programaci칩n", "Geografia" }));

        jLabel4.setText("Calificaci칩n");

        jLabel5.setText("Estatus");

        cbEstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aprobado", "Reprobado" }));

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActuazlizar.setText("Actualizar");
        btnActuazlizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActuazlizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cbMateria, 0, 184, Short.MAX_VALUE)
                                        .addComponent(txtApellidos)
                                        .addComponent(txtCalificacion)
                                        .addComponent(cbEstatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(btnActuazlizar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnEliminar)
                    .addComponent(btnGuardar))
                .addGap(16, 16, 16)
                .addComponent(btnActuazlizar)
                .addGap(39, 39, 39))
        );

        tablaAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaAlumnos);

        jLabel6.setText("Busqueda:");

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        //Llamo al metodo de insertar datos en la tabla
        insertarDatos();
        limpiarCajas();
        mostrarDatos();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // Llamar metodo de limpiar cajas de texto
        limpiarCajas();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tablaAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAlumnosMouseClicked
        //Editar desde la tabla que muestra la informaci칩n
        
        //Guardar la fila seleccionada
        int filaSeleccionada = tablaAlumnos.rowAtPoint(evt.getPoint());
        
        //Enviar la informaci칩n hacia los objetos
        txtNombre.setText(tablaAlumnos.getValueAt(filaSeleccionada,1).toString());
        txtApellidos.setText(tablaAlumnos.getValueAt(filaSeleccionada,2).toString());
        cbMateria.setSelectedItem(tablaAlumnos.getValueAt(filaSeleccionada, 3));
        txtCalificacion.setText(tablaAlumnos.getValueAt(filaSeleccionada,4).toString());
        cbEstatus.setSelectedItem(tablaAlumnos.getValueAt(filaSeleccionada, 5));
 
    }//GEN-LAST:event_tablaAlumnosMouseClicked

    private void btnActuazlizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActuazlizarActionPerformed
       actualizarDatos();
       limpiarCajas();
       mostrarDatos();
    }//GEN-LAST:event_btnActuazlizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        eliminarRegistro();
        mostrarDatos();
        limpiarCajas();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        //Llamamos el m칠todo y le ponemos el parametro txtBuscar
        filtrarDatos(txtBuscar.getText());
    }//GEN-LAST:event_txtBuscarKeyReleased

    public void eliminarRegistro(){
         
        int filaSeleccionada = tablaAlumnos.getSelectedRow();
        
        try {
            
            String SQL = "DELETE FROM alumnos WHERE idalumnos=" + tablaAlumnos.getValueAt(filaSeleccionada,0);
            
            Statement st = con.createStatement();
            
            int n = st.executeUpdate(SQL);
            
            if(n >= 0){
                JOptionPane.showMessageDialog(null, "Registro eliminado");
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al eliminar registros " + e.getMessage());
        }
        
    }
    
    //Crear metodo para limpiar cajas
    public void limpiarCajas(){
        txtNombre.setText("");
        txtApellidos.setText("");
        txtCalificacion.setText("");
        cbMateria.setSelectedItem(null);
        cbEstatus.setSelectedItem(null);
    }
    
    //Metodo para mostrar datos
    public void mostrarDatos(){
        
        //Creamos un array para los titulos
        String[] titulos = {"ID ", "Nombre", "Apellidos", "Materia", "Calificacion", "Estatus"}; 
        String[] registros = new String[7];
        
        //Enviamos los titulos de la tabla
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        
        //Sentencia SQL para traer los datos
        String SQL = "SELECT * FROM alumnos";
        
        try {
            //Creaci칩n de la sentencia ejecuci칩n
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            
            //Creamos un ciclo WHILE para llenar los campos
            //Usamos el m칠todo .next para que recorra todo el Array
            while(rs.next()){
                
                //Llenamos el array registros con cada campo (IMPORTANTE INDICAR EL NOMBRE IGUAL QUE EN LA BBDD
                registros[0] = rs.getString("idalumnos");
                registros[1] = rs.getString("nombre");
                registros[2] = rs.getString("apellido");
                registros[3] = rs.getString("materia");
                registros[4] = rs.getString("calificacion");
                registros[5] = rs.getString("estatus");
                
                //Creamos las filas de la tabla que obtengamos de nuestros registros
                modelo.addRow(registros);
                
            }
            
            //Enviamos el modelo a nuestra tabla
            tablaAlumnos.setModel(modelo);
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage());
        }
        
    }
    
    
    //Crear metodo para insertar datos (CREATE)
    public void insertarDatos(){
              
        try {
            //Creamos una variable con la sentencia SQL
            String SQL = "INSERT INTO alumnos(nombre,apellido,materia,calificacion,estatus) VALUES (?,?,?,?,?)";
            
            //Preparamos la sentencia
            PreparedStatement pst = con.prepareStatement(SQL);
            
            //Recibir los datos de texto 
            pst.setString(1, txtNombre.getText());
            pst.setString(2, txtApellidos.getText());
            
            //Trabajar con COMBOBOX
            int seleccionado = cbMateria.getSelectedIndex();
            pst.setString(3, cbMateria.getItemAt(seleccionado));
            
            //Trabajar con double
            pst.setDouble(4, Double.parseDouble(txtCalificacion.getText()));
            
            int seleccionado1 = cbEstatus.getSelectedIndex();
            pst.setString(5, cbEstatus.getItemAt(seleccionado1));
            
            //Ejecutar consulta
            pst.execute();
            
            JOptionPane.showMessageDialog(null, "Registro Exitoso");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error de registro " +  e.getMessage());
        }
        
    }
    
    //Metodo para actualizar datos
      public void actualizarDatos(){
              
        try {
            //Creamos una variable con la sentencia SQL
            String SQL = "UPDATE alumnos SET nombre = ?,apellido = ?,materia = ?,calificacion = ?,estatus = ? WHERE idalumnos=?";
            
            //Indicamos la fila seleccionada
            int filaSeleccionada = tablaAlumnos.getSelectedRow();
            String dao = (String)tablaAlumnos.getValueAt(filaSeleccionada, 0);
            
            //Preparamos la sentencia
            PreparedStatement pst = con.prepareStatement(SQL);
            
            //Recibir los datos de texto 
            pst.setString(1, txtNombre.getText());
            pst.setString(2, txtApellidos.getText());
            
            //Trabajar con COMBOBOX
            int seleccionado = cbMateria.getSelectedIndex();
            pst.setString(3, cbMateria.getItemAt(seleccionado));
            
            //Trabajar con double
            pst.setDouble(4, Double.parseDouble(txtCalificacion.getText()));
            
            int seleccionado1 = cbEstatus.getSelectedIndex();
            pst.setString(5, cbEstatus.getItemAt(seleccionado1));
            
            //Enviar variable DAO
            pst.setString(6, dao);
            
            //Ejecutar consulta
            pst.execute();
            
            JOptionPane.showMessageDialog(null, "Registro Editado Exitosamente");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error de editado " +  e.getMessage());
        }
        
    }
      
      //Metodo para filtrar datos
       public void filtrarDatos(String valor){
        
        //Creamos un array para los titulos
        String[] titulos = {"ID ", "Nombre", "Apellidos", "Materia", "Calificacion", "Estatus"}; 
        String[] registros = new String[7];
         
        //Enviamos los titulos de la tabla
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        
        //Sentencia SQL para traer los datos
        String SQL = "SELECT * FROM alumnos WHERE nombre LIKE '%" +valor+"%'   ";
        
        try {
            //Creaci칩n de la sentencia ejecuci칩n
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            
            //Creamos un ciclo WHILE para llenar los campos
            //Usamos el m칠todo .next para que recorra todo el Array
            while(rs.next()){
                
                //Llenamos el array registros con cada campo (IMPORTANTE INDICAR EL NOMBRE IGUAL QUE EN LA BBDD
                registros[0] = rs.getString("idalumnos");
                registros[1] = rs.getString("nombre");
                registros[2] = rs.getString("apellido");
                registros[3] = rs.getString("materia");
                registros[4] = rs.getString("calificacion");
                registros[5] = rs.getString("estatus");
                
                //Creamos las filas de la tabla que obtengamos de nuestros registros
                modelo.addRow(registros);
                
            }
            
            //Enviamos el modelo a nuestra tabla
            tablaAlumnos.setModel(modelo);
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al mostrar datos" + e.getMessage());
        }
        
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sistema.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sistema().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActuazlizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cbEstatus;
    private javax.swing.JComboBox<String> cbMateria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaAlumnos;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCalificacion;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
